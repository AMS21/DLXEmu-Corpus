INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 622097209
INFO: Loaded 1 modules   (521 inline 8-bit counters): 521 [0x87a3c0, 0x87a5c9), 
INFO: Loaded 1 PC tables (521 PCs): 521 [0x777ee8,0x779f78), 
MERGE-OUTER: 6550 files, 0 in the initial corpus, 0 processed earlier
MERGE-OUTER: attempt 1
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 622137356
INFO: Loaded 1 modules   (521 inline 8-bit counters): 521 [0x87a3c0, 0x87a5c9), 
INFO: Loaded 1 PC tables (521 PCs): 521 [0x777ee8,0x779f78), 
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 1048576 bytes
MERGE-INNER: using the control file '/tmp/libFuzzerTemp.Merge644.txt'
MERGE-INNER: 6550 total files; 0 processed earlier; will process 6550 files now
#1	pulse  cov: 25 ft: 26 exec/s: 0 rss: 30Mb
#2	pulse  cov: 38 ft: 40 exec/s: 0 rss: 30Mb
#4	pulse  cov: 40 ft: 42 exec/s: 0 rss: 30Mb
#8	pulse  cov: 46 ft: 48 exec/s: 0 rss: 30Mb
#16	pulse  cov: 56 ft: 60 exec/s: 0 rss: 30Mb
#32	pulse  cov: 74 ft: 78 exec/s: 0 rss: 30Mb
#64	pulse  cov: 110 ft: 114 exec/s: 0 rss: 30Mb
#128	pulse  cov: 164 ft: 197 exec/s: 0 rss: 30Mb
#256	pulse  cov: 243 ft: 348 exec/s: 0 rss: 30Mb
#512	pulse  cov: 290 ft: 571 exec/s: 0 rss: 31Mb
#1024	pulse  cov: 319 ft: 793 exec/s: 0 rss: 31Mb
#2048	pulse  cov: 331 ft: 1047 exec/s: 0 rss: 31Mb
#4096	pulse  cov: 333 ft: 1446 exec/s: 0 rss: 31Mb
ASSERTION VIOLATION
condition: draw_list->_VtxCurrentIdx < (1 << 16) && "Too many vertices in ImDrawList using 16-bit indices. Read comment above"
file:      /src/DLXEmu/external/imgui/imgui.cpp (4920)
function:  void AddDrawListToDrawData(ImVector<ImDrawList *> *, ImDrawList *)
==653== ERROR: libFuzzer: deadly signal
    #0 0x4bfed4 in __sanitizer_print_stack_trace /src/llvm-project/compiler-rt/lib/ubsan/ubsan_diag_standalone.cpp:31:3
    #1 0x441078 in fuzzer::PrintStackTrace() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerUtil.cpp:210:5
    #2 0x425d53 in fuzzer::Fuzzer::CrashCallback() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:233:3
    #3 0x7fe782f3641f  (/lib/x86_64-linux-gnu/libpthread.so.0+0x1441f) (BuildId: 7b4536f41cdaa5888408e82d0836e33dcf436466)
    #4 0x7fe782d5800a in raise (/lib/x86_64-linux-gnu/libc.so.6+0x4300a) (BuildId: 1878e6b475720c7c51969e69ab2d276fae6d1dee)
    #5 0x7fe782d37858 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x22858) (BuildId: 1878e6b475720c7c51969e69ab2d276fae6d1dee)
    #6 0x605fda in phi::detail::phi_assert_failure_handler(char const*, char const*, int, char const*) /src/DLXEmu/external/Phi/libs/PhiCore/src/core/assert.cpp:24:9
    #7 0x563789 in AddDrawListToDrawData(ImVector<ImDrawList*>*, ImDrawList*) /src/DLXEmu/external/imgui/imgui.cpp:4920:9
    #8 0x592b6f in AddWindowToDrawData(ImGuiWindow*, int) /src/DLXEmu/external/imgui/imgui.cpp:4932:5
    #9 0x592c22 in AddWindowToDrawData(ImGuiWindow*, int) /src/DLXEmu/external/imgui/imgui.cpp:4937:13
    #10 0x562b14 in AddRootWindowToDrawData(ImGuiWindow*) /src/DLXEmu/external/imgui/imgui.cpp:4949:5
    #11 0x562b14 in ImGui::Render() /src/DLXEmu/external/imgui/imgui.cpp:5279:13
    #12 0x4c4e59 in EndImGui() /src/DLXEmu/tests/Fuzzing/src/CodeEditor.fuzz.cpp:385:5
    #13 0x4c6d3e in LLVMFuzzerTestOneInput /src/DLXEmu/tests/Fuzzing/src/CodeEditor.fuzz.cpp:795:17
    #14 0x4272f3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #15 0x4300e4 in fuzzer::Fuzzer::CrashResistantMergeInternalStep(std::__Fuzzer::basic_string<char, std::__Fuzzer::char_traits<char>, std::__Fuzzer::allocator<char> > const&, bool) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMerge.cpp:235:5
    #16 0x418189 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:885:8
    #17 0x441832 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #18 0x7fe782d39082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 1878e6b475720c7c51969e69ab2d276fae6d1dee)
    #19 0x408c1d in _start (build-out/fuzz_code_editor+0x408c1d)

DEDUP_TOKEN: __sanitizer_print_stack_trace--fuzzer::PrintStackTrace()--fuzzer::Fuzzer::CrashCallback()
NOTE: libFuzzer has rudimentary signal handlers.
      Combine libFuzzer with AddressSanitizer or similar for better crash reports.
SUMMARY: libFuzzer: deadly signal
MS: 0 ; base unit: 0000000000000000000000000000000000000000
artifact_prefix='./'; Test unit written to ./crash-2e4cf9b0328212614b7367ec8921b3fc91582a1f
MERGE-OUTER: attempt 2
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 671892933
INFO: Loaded 1 modules   (521 inline 8-bit counters): 521 [0x87a3c0, 0x87a5c9), 
INFO: Loaded 1 PC tables (521 PCs): 521 [0x777ee8,0x779f78), 
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 1048576 bytes
MERGE-INNER: using the control file '/tmp/libFuzzerTemp.Merge644.txt'
MERGE-INNER: '/github/workspace/cifuzz-corpus/fuzz_code_editor/2e4cf9b0328212614b7367ec8921b3fc91582a1f' caused a failure at the previous merge step
MERGE-INNER: 6550 total files; 6204 processed earlier; will process 346 files now
#1	pulse  cov: 93 ft: 94 exec/s: 0 rss: 32Mb
#2	pulse  cov: 101 ft: 141 exec/s: 0 rss: 32Mb
#4	pulse  cov: 103 ft: 188 exec/s: 0 rss: 69Mb
ASSERTION VIOLATION
condition: draw_list->_VtxCurrentIdx < (1 << 16) && "Too many vertices in ImDrawList using 16-bit indices. Read comment above"
file:      /src/DLXEmu/external/imgui/imgui.cpp (4920)
function:  void AddDrawListToDrawData(ImVector<ImDrawList *> *, ImDrawList *)
==745== ERROR: libFuzzer: deadly signal
    #0 0x4bfed4 in __sanitizer_print_stack_trace /src/llvm-project/compiler-rt/lib/ubsan/ubsan_diag_standalone.cpp:31:3
    #1 0x441078 in fuzzer::PrintStackTrace() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerUtil.cpp:210:5
    #2 0x425d53 in fuzzer::Fuzzer::CrashCallback() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:233:3
    #3 0x7f5063e3241f  (/lib/x86_64-linux-gnu/libpthread.so.0+0x1441f) (BuildId: 7b4536f41cdaa5888408e82d0836e33dcf436466)
    #4 0x7f5063c5400a in raise (/lib/x86_64-linux-gnu/libc.so.6+0x4300a) (BuildId: 1878e6b475720c7c51969e69ab2d276fae6d1dee)
    #5 0x7f5063c33858 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x22858) (BuildId: 1878e6b475720c7c51969e69ab2d276fae6d1dee)
    #6 0x605fda in phi::detail::phi_assert_failure_handler(char const*, char const*, int, char const*) /src/DLXEmu/external/Phi/libs/PhiCore/src/core/assert.cpp:24:9
    #7 0x563789 in AddDrawListToDrawData(ImVector<ImDrawList*>*, ImDrawList*) /src/DLXEmu/external/imgui/imgui.cpp:4920:9
    #8 0x592b6f in AddWindowToDrawData(ImGuiWindow*, int) /src/DLXEmu/external/imgui/imgui.cpp:4932:5
    #9 0x592c22 in AddWindowToDrawData(ImGuiWindow*, int) /src/DLXEmu/external/imgui/imgui.cpp:4937:13
    #10 0x562b14 in AddRootWindowToDrawData(ImGuiWindow*) /src/DLXEmu/external/imgui/imgui.cpp:4949:5
    #11 0x562b14 in ImGui::Render() /src/DLXEmu/external/imgui/imgui.cpp:5279:13
    #12 0x4c4e59 in EndImGui() /src/DLXEmu/tests/Fuzzing/src/CodeEditor.fuzz.cpp:385:5
    #13 0x4c6d3e in LLVMFuzzerTestOneInput /src/DLXEmu/tests/Fuzzing/src/CodeEditor.fuzz.cpp:795:17
    #14 0x4272f3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #15 0x4300e4 in fuzzer::Fuzzer::CrashResistantMergeInternalStep(std::__Fuzzer::basic_string<char, std::__Fuzzer::char_traits<char>, std::__Fuzzer::allocator<char> > const&, bool) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMerge.cpp:235:5
    #16 0x418189 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:885:8
    #17 0x441832 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #18 0x7f5063c35082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 1878e6b475720c7c51969e69ab2d276fae6d1dee)
    #19 0x408c1d in _start (build-out/fuzz_code_editor+0x408c1d)

DEDUP_TOKEN: __sanitizer_print_stack_trace--fuzzer::PrintStackTrace()--fuzzer::Fuzzer::CrashCallback()
NOTE: libFuzzer has rudimentary signal handlers.
      Combine libFuzzer with AddressSanitizer or similar for better crash reports.
SUMMARY: libFuzzer: deadly signal
MS: 0 ; base unit: 0000000000000000000000000000000000000000
artifact_prefix='./'; Test unit written to ./crash-c71ea1e6e24d776de8398c195746480aef5eab53
MERGE-OUTER: attempt 3
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 672698422
INFO: Loaded 1 modules   (521 inline 8-bit counters): 521 [0x87a3c0, 0x87a5c9), 
INFO: Loaded 1 PC tables (521 PCs): 521 [0x777ee8,0x779f78), 
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 1048576 bytes
MERGE-INNER: using the control file '/tmp/libFuzzerTemp.Merge644.txt'
MERGE-INNER: '/github/workspace/cifuzz-corpus/fuzz_code_editor/c71ea1e6e24d776de8398c195746480aef5eab53' caused a failure at the previous merge step
MERGE-INNER: 6550 total files; 6211 processed earlier; will process 339 files now
#1	pulse  cov: 54 ft: 55 exec/s: 0 rss: 34Mb
#2	pulse  cov: 76 ft: 110 exec/s: 0 rss: 34Mb
#4	pulse  cov: 91 ft: 198 exec/s: 0 rss: 34Mb
#8	pulse  cov: 160 ft: 384 exec/s: 0 rss: 34Mb
#16	pulse  cov: 203 ft: 530 exec/s: 0 rss: 34Mb
ASSERTION VIOLATION
condition: draw_list->_VtxCurrentIdx < (1 << 16) && "Too many vertices in ImDrawList using 16-bit indices. Read comment above"
file:      /src/DLXEmu/external/imgui/imgui.cpp (4920)
function:  void AddDrawListToDrawData(ImVector<ImDrawList *> *, ImDrawList *)
==749== ERROR: libFuzzer: deadly signal
    #0 0x4bfed4 in __sanitizer_print_stack_trace /src/llvm-project/compiler-rt/lib/ubsan/ubsan_diag_standalone.cpp:31:3
    #1 0x441078 in fuzzer::PrintStackTrace() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerUtil.cpp:210:5
    #2 0x425d53 in fuzzer::Fuzzer::CrashCallback() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:233:3
    #3 0x7f0b8b28d41f  (/lib/x86_64-linux-gnu/libpthread.so.0+0x1441f) (BuildId: 7b4536f41cdaa5888408e82d0836e33dcf436466)
    #4 0x7f0b8b0af00a in raise (/lib/x86_64-linux-gnu/libc.so.6+0x4300a) (BuildId: 1878e6b475720c7c51969e69ab2d276fae6d1dee)
    #5 0x7f0b8b08e858 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x22858) (BuildId: 1878e6b475720c7c51969e69ab2d276fae6d1dee)
    #6 0x605fda in phi::detail::phi_assert_failure_handler(char const*, char const*, int, char const*) /src/DLXEmu/external/Phi/libs/PhiCore/src/core/assert.cpp:24:9
    #7 0x563789 in AddDrawListToDrawData(ImVector<ImDrawList*>*, ImDrawList*) /src/DLXEmu/external/imgui/imgui.cpp:4920:9
    #8 0x592b6f in AddWindowToDrawData(ImGuiWindow*, int) /src/DLXEmu/external/imgui/imgui.cpp:4932:5
    #9 0x592c22 in AddWindowToDrawData(ImGuiWindow*, int) /src/DLXEmu/external/imgui/imgui.cpp:4937:13
    #10 0x562b14 in AddRootWindowToDrawData(ImGuiWindow*) /src/DLXEmu/external/imgui/imgui.cpp:4949:5
    #11 0x562b14 in ImGui::Render() /src/DLXEmu/external/imgui/imgui.cpp:5279:13
    #12 0x4c4e59 in EndImGui() /src/DLXEmu/tests/Fuzzing/src/CodeEditor.fuzz.cpp:385:5
    #13 0x4c6d3e in LLVMFuzzerTestOneInput /src/DLXEmu/tests/Fuzzing/src/CodeEditor.fuzz.cpp:795:17
    #14 0x4272f3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #15 0x4300e4 in fuzzer::Fuzzer::CrashResistantMergeInternalStep(std::__Fuzzer::basic_string<char, std::__Fuzzer::char_traits<char>, std::__Fuzzer::allocator<char> > const&, bool) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMerge.cpp:235:5
    #16 0x418189 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:885:8
    #17 0x441832 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #18 0x7f0b8b090082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 1878e6b475720c7c51969e69ab2d276fae6d1dee)
    #19 0x408c1d in _start (build-out/fuzz_code_editor+0x408c1d)

DEDUP_TOKEN: __sanitizer_print_stack_trace--fuzzer::PrintStackTrace()--fuzzer::Fuzzer::CrashCallback()
NOTE: libFuzzer has rudimentary signal handlers.
      Combine libFuzzer with AddressSanitizer or similar for better crash reports.
SUMMARY: libFuzzer: deadly signal
MS: 0 ; base unit: 0000000000000000000000000000000000000000
artifact_prefix='./'; Test unit written to ./crash-6a3f18440fd25f7d568bc7b2d1258e4d3f1cb04d
MERGE-OUTER: attempt 4
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 673334383
INFO: Loaded 1 modules   (521 inline 8-bit counters): 521 [0x87a3c0, 0x87a5c9), 
INFO: Loaded 1 PC tables (521 PCs): 521 [0x777ee8,0x779f78), 
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 1048576 bytes
MERGE-INNER: using the control file '/tmp/libFuzzerTemp.Merge644.txt'
MERGE-INNER: '/github/workspace/cifuzz-corpus/fuzz_code_editor/6a3f18440fd25f7d568bc7b2d1258e4d3f1cb04d' caused a failure at the previous merge step
MERGE-INNER: 6550 total files; 6228 processed earlier; will process 322 files now
#1	pulse  cov: 58 ft: 59 exec/s: 0 rss: 32Mb
#2	pulse  cov: 63 ft: 88 exec/s: 0 rss: 32Mb
#4	pulse  cov: 78 ft: 150 exec/s: 0 rss: 32Mb
#8	pulse  cov: 106 ft: 276 exec/s: 0 rss: 32Mb
#16	pulse  cov: 175 ft: 477 exec/s: 0 rss: 74Mb
ASSERTION VIOLATION
condition: draw_list->_VtxCurrentIdx < (1 << 16) && "Too many vertices in ImDrawList using 16-bit indices. Read comment above"
file:      /src/DLXEmu/external/imgui/imgui.cpp (4920)
function:  void AddDrawListToDrawData(ImVector<ImDrawList *> *, ImDrawList *)
==753== ERROR: libFuzzer: deadly signal
    #0 0x4bfed4 in __sanitizer_print_stack_trace /src/llvm-project/compiler-rt/lib/ubsan/ubsan_diag_standalone.cpp:31:3
    #1 0x441078 in fuzzer::PrintStackTrace() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerUtil.cpp:210:5
    #2 0x425d53 in fuzzer::Fuzzer::CrashCallback() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:233:3
    #3 0x7f3e5c6bb41f  (/lib/x86_64-linux-gnu/libpthread.so.0+0x1441f) (BuildId: 7b4536f41cdaa5888408e82d0836e33dcf436466)
    #4 0x7f3e5c4dd00a in raise (/lib/x86_64-linux-gnu/libc.so.6+0x4300a) (BuildId: 1878e6b475720c7c51969e69ab2d276fae6d1dee)
    #5 0x7f3e5c4bc858 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x22858) (BuildId: 1878e6b475720c7c51969e69ab2d276fae6d1dee)
    #6 0x605fda in phi::detail::phi_assert_failure_handler(char const*, char const*, int, char const*) /src/DLXEmu/external/Phi/libs/PhiCore/src/core/assert.cpp:24:9
    #7 0x563789 in AddDrawListToDrawData(ImVector<ImDrawList*>*, ImDrawList*) /src/DLXEmu/external/imgui/imgui.cpp:4920:9
    #8 0x592b6f in AddWindowToDrawData(ImGuiWindow*, int) /src/DLXEmu/external/imgui/imgui.cpp:4932:5
    #9 0x592c22 in AddWindowToDrawData(ImGuiWindow*, int) /src/DLXEmu/external/imgui/imgui.cpp:4937:13
    #10 0x562b14 in AddRootWindowToDrawData(ImGuiWindow*) /src/DLXEmu/external/imgui/imgui.cpp:4949:5
    #11 0x562b14 in ImGui::Render() /src/DLXEmu/external/imgui/imgui.cpp:5279:13
    #12 0x4c4e59 in EndImGui() /src/DLXEmu/tests/Fuzzing/src/CodeEditor.fuzz.cpp:385:5
    #13 0x4c6d3e in LLVMFuzzerTestOneInput /src/DLXEmu/tests/Fuzzing/src/CodeEditor.fuzz.cpp:795:17
    #14 0x4272f3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #15 0x4300e4 in fuzzer::Fuzzer::CrashResistantMergeInternalStep(std::__Fuzzer::basic_string<char, std::__Fuzzer::char_traits<char>, std::__Fuzzer::allocator<char> > const&, bool) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMerge.cpp:235:5
    #16 0x418189 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:885:8
    #17 0x441832 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #18 0x7f3e5c4be082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 1878e6b475720c7c51969e69ab2d276fae6d1dee)
    #19 0x408c1d in _start (build-out/fuzz_code_editor+0x408c1d)

DEDUP_TOKEN: __sanitizer_print_stack_trace--fuzzer::PrintStackTrace()--fuzzer::Fuzzer::CrashCallback()
NOTE: libFuzzer has rudimentary signal handlers.
      Combine libFuzzer with AddressSanitizer or similar for better crash reports.
SUMMARY: libFuzzer: deadly signal
MS: 0 ; base unit: 0000000000000000000000000000000000000000
artifact_prefix='./'; Test unit written to ./crash-3fbc0bec0d96f61464279149b3176cff33f38626
MERGE-OUTER: attempt 5
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 674291169
INFO: Loaded 1 modules   (521 inline 8-bit counters): 521 [0x87a3c0, 0x87a5c9), 
INFO: Loaded 1 PC tables (521 PCs): 521 [0x777ee8,0x779f78), 
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 1048576 bytes
MERGE-INNER: using the control file '/tmp/libFuzzerTemp.Merge644.txt'
MERGE-INNER: '/github/workspace/cifuzz-corpus/fuzz_code_editor/3fbc0bec0d96f61464279149b3176cff33f38626' caused a failure at the previous merge step
MERGE-INNER: 6550 total files; 6257 processed earlier; will process 293 files now
#1	pulse  cov: 66 ft: 67 exec/s: 0 rss: 338Mb
#2	pulse  cov: 73 ft: 92 exec/s: 0 rss: 338Mb
#4	pulse  cov: 82 ft: 142 exec/s: 0 rss: 338Mb
#8	pulse  cov: 135 ft: 328 exec/s: 1 rss: 338Mb
ASSERTION VIOLATION
condition: draw_list->_VtxCurrentIdx < (1 << 16) && "Too many vertices in ImDrawList using 16-bit indices. Read comment above"
file:      /src/DLXEmu/external/imgui/imgui.cpp (4920)
function:  void AddDrawListToDrawData(ImVector<ImDrawList *> *, ImDrawList *)
==757== ERROR: libFuzzer: deadly signal
    #0 0x4bfed4 in __sanitizer_print_stack_trace /src/llvm-project/compiler-rt/lib/ubsan/ubsan_diag_standalone.cpp:31:3
    #1 0x441078 in fuzzer::PrintStackTrace() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerUtil.cpp:210:5
    #2 0x425d53 in fuzzer::Fuzzer::CrashCallback() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:233:3
    #3 0x7f7a896dd41f  (/lib/x86_64-linux-gnu/libpthread.so.0+0x1441f) (BuildId: 7b4536f41cdaa5888408e82d0836e33dcf436466)
    #4 0x7f7a894ff00a in raise (/lib/x86_64-linux-gnu/libc.so.6+0x4300a) (BuildId: 1878e6b475720c7c51969e69ab2d276fae6d1dee)
    #5 0x7f7a894de858 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x22858) (BuildId: 1878e6b475720c7c51969e69ab2d276fae6d1dee)
    #6 0x605fda in phi::detail::phi_assert_failure_handler(char const*, char const*, int, char const*) /src/DLXEmu/external/Phi/libs/PhiCore/src/core/assert.cpp:24:9
    #7 0x563789 in AddDrawListToDrawData(ImVector<ImDrawList*>*, ImDrawList*) /src/DLXEmu/external/imgui/imgui.cpp:4920:9
    #8 0x592b6f in AddWindowToDrawData(ImGuiWindow*, int) /src/DLXEmu/external/imgui/imgui.cpp:4932:5
    #9 0x592c22 in AddWindowToDrawData(ImGuiWindow*, int) /src/DLXEmu/external/imgui/imgui.cpp:4937:13
    #10 0x562b14 in AddRootWindowToDrawData(ImGuiWindow*) /src/DLXEmu/external/imgui/imgui.cpp:4949:5
    #11 0x562b14 in ImGui::Render() /src/DLXEmu/external/imgui/imgui.cpp:5279:13
    #12 0x4c4e59 in EndImGui() /src/DLXEmu/tests/Fuzzing/src/CodeEditor.fuzz.cpp:385:5
    #13 0x4c6d3e in LLVMFuzzerTestOneInput /src/DLXEmu/tests/Fuzzing/src/CodeEditor.fuzz.cpp:795:17
    #14 0x4272f3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #15 0x4300e4 in fuzzer::Fuzzer::CrashResistantMergeInternalStep(std::__Fuzzer::basic_string<char, std::__Fuzzer::char_traits<char>, std::__Fuzzer::allocator<char> > const&, bool) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMerge.cpp:235:5
    #16 0x418189 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:885:8
    #17 0x441832 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #18 0x7f7a894e0082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 1878e6b475720c7c51969e69ab2d276fae6d1dee)
    #19 0x408c1d in _start (build-out/fuzz_code_editor+0x408c1d)

DEDUP_TOKEN: __sanitizer_print_stack_trace--fuzzer::PrintStackTrace()--fuzzer::Fuzzer::CrashCallback()
NOTE: libFuzzer has rudimentary signal handlers.
      Combine libFuzzer with AddressSanitizer or similar for better crash reports.
SUMMARY: libFuzzer: deadly signal
MS: 0 ; base unit: 0000000000000000000000000000000000000000
artifact_prefix='./'; Test unit written to ./crash-81b52d22723a970e58b0dd28cb0e3fc1d10fb642
MERGE-OUTER: attempt 6
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 680164330
INFO: Loaded 1 modules   (521 inline 8-bit counters): 521 [0x87a3c0, 0x87a5c9), 
INFO: Loaded 1 PC tables (521 PCs): 521 [0x777ee8,0x779f78), 
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 1048576 bytes
MERGE-INNER: using the control file '/tmp/libFuzzerTemp.Merge644.txt'
MERGE-INNER: '/github/workspace/cifuzz-corpus/fuzz_code_editor/81b52d22723a970e58b0dd28cb0e3fc1d10fb642' caused a failure at the previous merge step
MERGE-INNER: 6550 total files; 6271 processed earlier; will process 279 files now
#1	pulse  cov: 87 ft: 88 exec/s: 0 rss: 32Mb
#2	pulse  cov: 96 ft: 106 exec/s: 0 rss: 32Mb
#4	pulse  cov: 146 ft: 224 exec/s: 0 rss: 43Mb
#8	pulse  cov: 159 ft: 296 exec/s: 0 rss: 43Mb
#16	pulse  cov: 173 ft: 434 exec/s: 5 rss: 272Mb
#32	pulse  cov: 188 ft: 692 exec/s: 5 rss: 544Mb
#64	pulse  cov: 204 ft: 878 exec/s: 1 rss: 544Mb
#128	pulse  cov: 232 ft: 1075 exec/s: 3 rss: 544Mb
ASSERTION VIOLATION
condition: draw_list->_VtxCurrentIdx < (1 << 16) && "Too many vertices in ImDrawList using 16-bit indices. Read comment above"
file:      /src/DLXEmu/external/imgui/imgui.cpp (4920)
function:  void AddDrawListToDrawData(ImVector<ImDrawList *> *, ImDrawList *)
==769== ERROR: libFuzzer: deadly signal
    #0 0x4bfed4 in __sanitizer_print_stack_trace /src/llvm-project/compiler-rt/lib/ubsan/ubsan_diag_standalone.cpp:31:3
    #1 0x441078 in fuzzer::PrintStackTrace() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerUtil.cpp:210:5
    #2 0x425d53 in fuzzer::Fuzzer::CrashCallback() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:233:3
    #3 0x7fb734b3241f  (/lib/x86_64-linux-gnu/libpthread.so.0+0x1441f) (BuildId: 7b4536f41cdaa5888408e82d0836e33dcf436466)
    #4 0x7fb73495400a in raise (/lib/x86_64-linux-gnu/libc.so.6+0x4300a) (BuildId: 1878e6b475720c7c51969e69ab2d276fae6d1dee)
    #5 0x7fb734933858 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x22858) (BuildId: 1878e6b475720c7c51969e69ab2d276fae6d1dee)
    #6 0x605fda in phi::detail::phi_assert_failure_handler(char const*, char const*, int, char const*) /src/DLXEmu/external/Phi/libs/PhiCore/src/core/assert.cpp:24:9
    #7 0x563789 in AddDrawListToDrawData(ImVector<ImDrawList*>*, ImDrawList*) /src/DLXEmu/external/imgui/imgui.cpp:4920:9
    #8 0x592b6f in AddWindowToDrawData(ImGuiWindow*, int) /src/DLXEmu/external/imgui/imgui.cpp:4932:5
    #9 0x592c22 in AddWindowToDrawData(ImGuiWindow*, int) /src/DLXEmu/external/imgui/imgui.cpp:4937:13
    #10 0x562b14 in AddRootWindowToDrawData(ImGuiWindow*) /src/DLXEmu/external/imgui/imgui.cpp:4949:5
    #11 0x562b14 in ImGui::Render() /src/DLXEmu/external/imgui/imgui.cpp:5279:13
    #12 0x4c4e59 in EndImGui() /src/DLXEmu/tests/Fuzzing/src/CodeEditor.fuzz.cpp:385:5
    #13 0x4c6d3e in LLVMFuzzerTestOneInput /src/DLXEmu/tests/Fuzzing/src/CodeEditor.fuzz.cpp:795:17
    #14 0x4272f3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #15 0x4300e4 in fuzzer::Fuzzer::CrashResistantMergeInternalStep(std::__Fuzzer::basic_string<char, std::__Fuzzer::char_traits<char>, std::__Fuzzer::allocator<char> > const&, bool) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMerge.cpp:235:5
    #16 0x418189 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:885:8
    #17 0x441832 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #18 0x7fb734935082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 1878e6b475720c7c51969e69ab2d276fae6d1dee)
    #19 0x408c1d in _start (build-out/fuzz_code_editor+0x408c1d)

DEDUP_TOKEN: __sanitizer_print_stack_trace--fuzzer::PrintStackTrace()--fuzzer::Fuzzer::CrashCallback()
NOTE: libFuzzer has rudimentary signal handlers.
      Combine libFuzzer with AddressSanitizer or similar for better crash reports.
SUMMARY: libFuzzer: deadly signal
MS: 0 ; base unit: 0000000000000000000000000000000000000000
artifact_prefix='./'; Test unit written to ./crash-5150f8d1dd5dd22e18e2d94297000321559feffb
MERGE-OUTER: attempt 7
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 721347670
INFO: Loaded 1 modules   (521 inline 8-bit counters): 521 [0x87a3c0, 0x87a5c9), 
INFO: Loaded 1 PC tables (521 PCs): 521 [0x777ee8,0x779f78), 
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 1048576 bytes
MERGE-INNER: using the control file '/tmp/libFuzzerTemp.Merge644.txt'
MERGE-INNER: '/github/workspace/cifuzz-corpus/fuzz_code_editor/5150f8d1dd5dd22e18e2d94297000321559feffb' caused a failure at the previous merge step
MERGE-INNER: 6550 total files; 6477 processed earlier; will process 73 files now
#1	pulse  cov: 101 ft: 102 exec/s: 0 rss: 33Mb
#2	pulse  cov: 105 ft: 129 exec/s: 0 rss: 33Mb
#4	pulse  cov: 116 ft: 201 exec/s: 0 rss: 33Mb
#8	pulse  cov: 159 ft: 326 exec/s: 0 rss: 1526Mb
#16	pulse  cov: 192 ft: 513 exec/s: 0 rss: 1526Mb
#32	pulse  cov: 211 ft: 647 exec/s: 1 rss: 1526Mb
#64	pulse  cov: 228 ft: 778 exec/s: 1 rss: 1526Mb
#73	DONE   cov: 230 ft: 789 exec/s: 1 rss: 1526Mb
MERGE-OUTER: successful in 7 attempt(s)
MERGE-OUTER: the control file has 842694 bytes
MERGE-OUTER: consumed 0Mb (30Mb rss) to parse the control file
MERGE-OUTER: 817 new files with 1726 new features added; 333 new coverage edges
