INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 4116089509
INFO: Loaded 1 modules   (521 inline 8-bit counters): 521 [0x888560, 0x888769), 
INFO: Loaded 1 PC tables (521 PCs): 521 [0x783c90,0x785d20), 
MERGE-OUTER: 13324 files, 0 in the initial corpus, 0 processed earlier
MERGE-OUTER: attempt 1
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 4116147624
INFO: Loaded 1 modules   (521 inline 8-bit counters): 521 [0x888560, 0x888769), 
INFO: Loaded 1 PC tables (521 PCs): 521 [0x783c90,0x785d20), 
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 1048576 bytes
MERGE-INNER: using the control file '/tmp/libFuzzerTemp.Merge598.txt'
MERGE-INNER: 13324 total files; 0 processed earlier; will process 13324 files now
#1	pulse  cov: 25 ft: 26 exec/s: 0 rss: 31Mb
#2	pulse  cov: 27 ft: 28 exec/s: 0 rss: 31Mb
#4	pulse  cov: 30 ft: 31 exec/s: 0 rss: 31Mb
#8	pulse  cov: 38 ft: 39 exec/s: 0 rss: 31Mb
#16	pulse  cov: 46 ft: 47 exec/s: 0 rss: 31Mb
#32	pulse  cov: 72 ft: 74 exec/s: 0 rss: 31Mb
#64	pulse  cov: 109 ft: 113 exec/s: 0 rss: 31Mb
#128	pulse  cov: 159 ft: 191 exec/s: 0 rss: 31Mb
#256	pulse  cov: 238 ft: 341 exec/s: 0 rss: 32Mb
#512	pulse  cov: 283 ft: 566 exec/s: 0 rss: 32Mb
#1024	pulse  cov: 318 ft: 782 exec/s: 0 rss: 32Mb
#2048	pulse  cov: 328 ft: 1041 exec/s: 0 rss: 32Mb
#4096	pulse  cov: 331 ft: 1329 exec/s: 0 rss: 32Mb
#8192	pulse  cov: 331 ft: 1622 exec/s: 1365 rss: 227Mb
ASSERTION VIOLATION
condition: draw_list->_VtxCurrentIdx < (1 << 16) && "Too many vertices in ImDrawList using 16-bit indices. Read comment above"
file:      /src/DLXEmu/external/imgui/imgui_draw.cpp (1900)
function:  void ImGui::AddDrawListToDrawDataEx(ImDrawData *, ImVector<ImDrawList *> *, ImDrawList *)
==611== ERROR: libFuzzer: deadly signal
    #0 0x4bfed4 in __sanitizer_print_stack_trace /src/llvm-project/compiler-rt/lib/ubsan/ubsan_diag_standalone.cpp:31:3
    #1 0x441078 in fuzzer::PrintStackTrace() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerUtil.cpp:210:5
    #2 0x425d53 in fuzzer::Fuzzer::CrashCallback() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:233:3
    #3 0x7fef054ce41f  (/lib/x86_64-linux-gnu/libpthread.so.0+0x1441f) (BuildId: 0c044ba611aeeeaebb8374e660061f341ebc0bac)
    #4 0x7fef052f000a in raise (/lib/x86_64-linux-gnu/libc.so.6+0x4300a) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)
    #5 0x7fef052cf858 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x22858) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)
    #6 0x61192a in phi::detail::phi_assert_failure_handler(char const*, char const*, int, char const*) /src/DLXEmu/external/Phi/libs/PhiCore/src/core/assert.cpp:30:9
    #7 0x5b2082 in ImGui::AddDrawListToDrawDataEx(ImDrawData*, ImVector<ImDrawList*>*, ImDrawList*) /src/DLXEmu/external/imgui/imgui_draw.cpp:1900:9
    #8 0x597d8f in AddWindowToDrawData(ImGuiWindow*, int) /src/DLXEmu/external/imgui/imgui.cpp:5088:5
    #9 0x597e1f in AddWindowToDrawData(ImGuiWindow*, int) /src/DLXEmu/external/imgui/imgui.cpp:5091:13
    #10 0x566c4f in AddRootWindowToDrawData(ImGuiWindow*) /src/DLXEmu/external/imgui/imgui.cpp:5102:5
    #11 0x566c4f in ImGui::Render() /src/DLXEmu/external/imgui/imgui.cpp:5435:13
    #12 0x4c4e59 in EndImGui() /src/DLXEmu/tests/Fuzzing/src/CodeEditor.fuzz.cpp:385:5
    #13 0x4c6d2e in LLVMFuzzerTestOneInput /src/DLXEmu/tests/Fuzzing/src/CodeEditor.fuzz.cpp:794:17
    #14 0x4272f3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #15 0x4300e4 in fuzzer::Fuzzer::CrashResistantMergeInternalStep(std::__Fuzzer::basic_string<char, std::__Fuzzer::char_traits<char>, std::__Fuzzer::allocator<char> > const&, bool) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMerge.cpp:235:5
    #16 0x418189 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:885:8
    #17 0x441832 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #18 0x7fef052d1082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)
    #19 0x408c1d in _start (build-out/fuzz_code_editor+0x408c1d)

DEDUP_TOKEN: __sanitizer_print_stack_trace--fuzzer::PrintStackTrace()--fuzzer::Fuzzer::CrashCallback()
NOTE: libFuzzer has rudimentary signal handlers.
      Combine libFuzzer with AddressSanitizer or similar for better crash reports.
SUMMARY: libFuzzer: deadly signal
MS: 0 ; base unit: 0000000000000000000000000000000000000000
artifact_prefix='./'; Test unit written to ./crash-b2a3117ae86324573396d0a4b5a47cce8a3b2265
MERGE-OUTER: attempt 2
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 4129006071
INFO: Loaded 1 modules   (521 inline 8-bit counters): 521 [0x888560, 0x888769), 
INFO: Loaded 1 PC tables (521 PCs): 521 [0x783c90,0x785d20), 
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 1048576 bytes
MERGE-INNER: using the control file '/tmp/libFuzzerTemp.Merge598.txt'
MERGE-INNER: '/github/workspace/cifuzz-corpus/fuzz_code_editor/b2a3117ae86324573396d0a4b5a47cce8a3b2265' caused a failure at the previous merge step
MERGE-INNER: 13324 total files; 9751 processed earlier; will process 3573 files now
#1	pulse  cov: 79 ft: 80 exec/s: 0 rss: 438Mb
ASSERTION VIOLATION
condition: draw_list->_VtxCurrentIdx < (1 << 16) && "Too many vertices in ImDrawList using 16-bit indices. Read comment above"
file:      /src/DLXEmu/external/imgui/imgui_draw.cpp (1900)
function:  void ImGui::AddDrawListToDrawDataEx(ImDrawData *, ImVector<ImDrawList *> *, ImDrawList *)
==882== ERROR: libFuzzer: deadly signal
    #0 0x4bfed4 in __sanitizer_print_stack_trace /src/llvm-project/compiler-rt/lib/ubsan/ubsan_diag_standalone.cpp:31:3
    #1 0x441078 in fuzzer::PrintStackTrace() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerUtil.cpp:210:5
    #2 0x425d53 in fuzzer::Fuzzer::CrashCallback() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:233:3
    #3 0x7f771524541f  (/lib/x86_64-linux-gnu/libpthread.so.0+0x1441f) (BuildId: 0c044ba611aeeeaebb8374e660061f341ebc0bac)
    #4 0x7f771506700a in raise (/lib/x86_64-linux-gnu/libc.so.6+0x4300a) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)
    #5 0x7f7715046858 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x22858) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)
    #6 0x61192a in phi::detail::phi_assert_failure_handler(char const*, char const*, int, char const*) /src/DLXEmu/external/Phi/libs/PhiCore/src/core/assert.cpp:30:9
    #7 0x5b2082 in ImGui::AddDrawListToDrawDataEx(ImDrawData*, ImVector<ImDrawList*>*, ImDrawList*) /src/DLXEmu/external/imgui/imgui_draw.cpp:1900:9
    #8 0x597d8f in AddWindowToDrawData(ImGuiWindow*, int) /src/DLXEmu/external/imgui/imgui.cpp:5088:5
    #9 0x597e1f in AddWindowToDrawData(ImGuiWindow*, int) /src/DLXEmu/external/imgui/imgui.cpp:5091:13
    #10 0x566c4f in AddRootWindowToDrawData(ImGuiWindow*) /src/DLXEmu/external/imgui/imgui.cpp:5102:5
    #11 0x566c4f in ImGui::Render() /src/DLXEmu/external/imgui/imgui.cpp:5435:13
    #12 0x4c4e59 in EndImGui() /src/DLXEmu/tests/Fuzzing/src/CodeEditor.fuzz.cpp:385:5
    #13 0x4c6d2e in LLVMFuzzerTestOneInput /src/DLXEmu/tests/Fuzzing/src/CodeEditor.fuzz.cpp:794:17
    #14 0x4272f3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #15 0x4300e4 in fuzzer::Fuzzer::CrashResistantMergeInternalStep(std::__Fuzzer::basic_string<char, std::__Fuzzer::char_traits<char>, std::__Fuzzer::allocator<char> > const&, bool) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMerge.cpp:235:5
    #16 0x418189 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:885:8
    #17 0x441832 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #18 0x7f7715048082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)
    #19 0x408c1d in _start (build-out/fuzz_code_editor+0x408c1d)

DEDUP_TOKEN: __sanitizer_print_stack_trace--fuzzer::PrintStackTrace()--fuzzer::Fuzzer::CrashCallback()
NOTE: libFuzzer has rudimentary signal handlers.
      Combine libFuzzer with AddressSanitizer or similar for better crash reports.
SUMMARY: libFuzzer: deadly signal
MS: 0 ; base unit: 0000000000000000000000000000000000000000
artifact_prefix='./'; Test unit written to ./crash-83805c0df29226467907e7d54497e1a047acce70
MERGE-OUTER: attempt 3
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 4139427351
INFO: Loaded 1 modules   (521 inline 8-bit counters): 521 [0x888560, 0x888769), 
INFO: Loaded 1 PC tables (521 PCs): 521 [0x783c90,0x785d20), 
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 1048576 bytes
MERGE-INNER: using the control file '/tmp/libFuzzerTemp.Merge598.txt'
MERGE-INNER: '/github/workspace/cifuzz-corpus/fuzz_code_editor/83805c0df29226467907e7d54497e1a047acce70' caused a failure at the previous merge step
MERGE-INNER: 13324 total files; 9753 processed earlier; will process 3571 files now
#1	pulse  cov: 79 ft: 80 exec/s: 0 rss: 438Mb
#2	pulse  cov: 90 ft: 131 exec/s: 0 rss: 438Mb
ASSERTION VIOLATION
condition: draw_list->_VtxCurrentIdx < (1 << 16) && "Too many vertices in ImDrawList using 16-bit indices. Read comment above"
file:      /src/DLXEmu/external/imgui/imgui_draw.cpp (1900)
function:  void ImGui::AddDrawListToDrawDataEx(ImDrawData *, ImVector<ImDrawList *> *, ImDrawList *)
==886== ERROR: libFuzzer: deadly signal
    #0 0x4bfed4 in __sanitizer_print_stack_trace /src/llvm-project/compiler-rt/lib/ubsan/ubsan_diag_standalone.cpp:31:3
    #1 0x441078 in fuzzer::PrintStackTrace() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerUtil.cpp:210:5
    #2 0x425d53 in fuzzer::Fuzzer::CrashCallback() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:233:3
    #3 0x7f3c95caf41f  (/lib/x86_64-linux-gnu/libpthread.so.0+0x1441f) (BuildId: 0c044ba611aeeeaebb8374e660061f341ebc0bac)
    #4 0x7f3c95ad100a in raise (/lib/x86_64-linux-gnu/libc.so.6+0x4300a) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)
    #5 0x7f3c95ab0858 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x22858) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)
    #6 0x61192a in phi::detail::phi_assert_failure_handler(char const*, char const*, int, char const*) /src/DLXEmu/external/Phi/libs/PhiCore/src/core/assert.cpp:30:9
    #7 0x5b2082 in ImGui::AddDrawListToDrawDataEx(ImDrawData*, ImVector<ImDrawList*>*, ImDrawList*) /src/DLXEmu/external/imgui/imgui_draw.cpp:1900:9
    #8 0x597d8f in AddWindowToDrawData(ImGuiWindow*, int) /src/DLXEmu/external/imgui/imgui.cpp:5088:5
    #9 0x597e1f in AddWindowToDrawData(ImGuiWindow*, int) /src/DLXEmu/external/imgui/imgui.cpp:5091:13
    #10 0x566c4f in AddRootWindowToDrawData(ImGuiWindow*) /src/DLXEmu/external/imgui/imgui.cpp:5102:5
    #11 0x566c4f in ImGui::Render() /src/DLXEmu/external/imgui/imgui.cpp:5435:13
    #12 0x4c4e59 in EndImGui() /src/DLXEmu/tests/Fuzzing/src/CodeEditor.fuzz.cpp:385:5
    #13 0x4c6d2e in LLVMFuzzerTestOneInput /src/DLXEmu/tests/Fuzzing/src/CodeEditor.fuzz.cpp:794:17
    #14 0x4272f3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #15 0x4300e4 in fuzzer::Fuzzer::CrashResistantMergeInternalStep(std::__Fuzzer::basic_string<char, std::__Fuzzer::char_traits<char>, std::__Fuzzer::allocator<char> > const&, bool) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMerge.cpp:235:5
    #16 0x418189 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:885:8
    #17 0x441832 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #18 0x7f3c95ab2082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)
    #19 0x408c1d in _start (build-out/fuzz_code_editor+0x408c1d)

DEDUP_TOKEN: __sanitizer_print_stack_trace--fuzzer::PrintStackTrace()--fuzzer::Fuzzer::CrashCallback()
NOTE: libFuzzer has rudimentary signal handlers.
      Combine libFuzzer with AddressSanitizer or similar for better crash reports.
SUMMARY: libFuzzer: deadly signal
MS: 0 ; base unit: 0000000000000000000000000000000000000000
artifact_prefix='./'; Test unit written to ./crash-d1959180cb0cdca0102e96befe753428c3482acc
MERGE-OUTER: attempt 4
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 4149948087
INFO: Loaded 1 modules   (521 inline 8-bit counters): 521 [0x888560, 0x888769), 
INFO: Loaded 1 PC tables (521 PCs): 521 [0x783c90,0x785d20), 
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 1048576 bytes
MERGE-INNER: using the control file '/tmp/libFuzzerTemp.Merge598.txt'
MERGE-INNER: '/github/workspace/cifuzz-corpus/fuzz_code_editor/d1959180cb0cdca0102e96befe753428c3482acc' caused a failure at the previous merge step
MERGE-INNER: 13324 total files; 9756 processed earlier; will process 3568 files now
#1	pulse  cov: 79 ft: 80 exec/s: 0 rss: 438Mb
#2	pulse  cov: 80 ft: 108 exec/s: 0 rss: 438Mb
ASSERTION VIOLATION
condition: draw_list->_VtxCurrentIdx < (1 << 16) && "Too many vertices in ImDrawList using 16-bit indices. Read comment above"
file:      /src/DLXEmu/external/imgui/imgui_draw.cpp (1900)
function:  void ImGui::AddDrawListToDrawDataEx(ImDrawData *, ImVector<ImDrawList *> *, ImDrawList *)
==890== ERROR: libFuzzer: deadly signal
    #0 0x4bfed4 in __sanitizer_print_stack_trace /src/llvm-project/compiler-rt/lib/ubsan/ubsan_diag_standalone.cpp:31:3
    #1 0x441078 in fuzzer::PrintStackTrace() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerUtil.cpp:210:5
    #2 0x425d53 in fuzzer::Fuzzer::CrashCallback() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:233:3
    #3 0x7f141c0cb41f  (/lib/x86_64-linux-gnu/libpthread.so.0+0x1441f) (BuildId: 0c044ba611aeeeaebb8374e660061f341ebc0bac)
    #4 0x7f141beed00a in raise (/lib/x86_64-linux-gnu/libc.so.6+0x4300a) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)
    #5 0x7f141becc858 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x22858) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)
    #6 0x61192a in phi::detail::phi_assert_failure_handler(char const*, char const*, int, char const*) /src/DLXEmu/external/Phi/libs/PhiCore/src/core/assert.cpp:30:9
    #7 0x5b2082 in ImGui::AddDrawListToDrawDataEx(ImDrawData*, ImVector<ImDrawList*>*, ImDrawList*) /src/DLXEmu/external/imgui/imgui_draw.cpp:1900:9
    #8 0x597d8f in AddWindowToDrawData(ImGuiWindow*, int) /src/DLXEmu/external/imgui/imgui.cpp:5088:5
    #9 0x597e1f in AddWindowToDrawData(ImGuiWindow*, int) /src/DLXEmu/external/imgui/imgui.cpp:5091:13
    #10 0x566c4f in AddRootWindowToDrawData(ImGuiWindow*) /src/DLXEmu/external/imgui/imgui.cpp:5102:5
    #11 0x566c4f in ImGui::Render() /src/DLXEmu/external/imgui/imgui.cpp:5435:13
    #12 0x4c4e59 in EndImGui() /src/DLXEmu/tests/Fuzzing/src/CodeEditor.fuzz.cpp:385:5
    #13 0x4c6d2e in LLVMFuzzerTestOneInput /src/DLXEmu/tests/Fuzzing/src/CodeEditor.fuzz.cpp:794:17
    #14 0x4272f3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #15 0x4300e4 in fuzzer::Fuzzer::CrashResistantMergeInternalStep(std::__Fuzzer::basic_string<char, std::__Fuzzer::char_traits<char>, std::__Fuzzer::allocator<char> > const&, bool) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMerge.cpp:235:5
    #16 0x418189 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:885:8
    #17 0x441832 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #18 0x7f141bece082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)
    #19 0x408c1d in _start (build-out/fuzz_code_editor+0x408c1d)

DEDUP_TOKEN: __sanitizer_print_stack_trace--fuzzer::PrintStackTrace()--fuzzer::Fuzzer::CrashCallback()
NOTE: libFuzzer has rudimentary signal handlers.
      Combine libFuzzer with AddressSanitizer or similar for better crash reports.
SUMMARY: libFuzzer: deadly signal
MS: 0 ; base unit: 0000000000000000000000000000000000000000
artifact_prefix='./'; Test unit written to ./crash-5bc4bbb1217191717ada203d4544df256eb15143
MERGE-OUTER: attempt 5
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 4158966776
INFO: Loaded 1 modules   (521 inline 8-bit counters): 521 [0x888560, 0x888769), 
INFO: Loaded 1 PC tables (521 PCs): 521 [0x783c90,0x785d20), 
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 1048576 bytes
MERGE-INNER: using the control file '/tmp/libFuzzerTemp.Merge598.txt'
MERGE-INNER: '/github/workspace/cifuzz-corpus/fuzz_code_editor/5bc4bbb1217191717ada203d4544df256eb15143' caused a failure at the previous merge step
MERGE-INNER: 13324 total files; 9759 processed earlier; will process 3565 files now
#1	pulse  cov: 78 ft: 79 exec/s: 0 rss: 32Mb
ASSERTION VIOLATION
condition: draw_list->_VtxCurrentIdx < (1 << 16) && "Too many vertices in ImDrawList using 16-bit indices. Read comment above"
file:      /src/DLXEmu/external/imgui/imgui_draw.cpp (1900)
function:  void ImGui::AddDrawListToDrawDataEx(ImDrawData *, ImVector<ImDrawList *> *, ImDrawList *)
==894== ERROR: libFuzzer: deadly signal
    #0 0x4bfed4 in __sanitizer_print_stack_trace /src/llvm-project/compiler-rt/lib/ubsan/ubsan_diag_standalone.cpp:31:3
    #1 0x441078 in fuzzer::PrintStackTrace() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerUtil.cpp:210:5
    #2 0x425d53 in fuzzer::Fuzzer::CrashCallback() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:233:3
    #3 0x7f001621341f  (/lib/x86_64-linux-gnu/libpthread.so.0+0x1441f) (BuildId: 0c044ba611aeeeaebb8374e660061f341ebc0bac)
    #4 0x7f001603500a in raise (/lib/x86_64-linux-gnu/libc.so.6+0x4300a) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)
    #5 0x7f0016014858 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x22858) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)
    #6 0x61192a in phi::detail::phi_assert_failure_handler(char const*, char const*, int, char const*) /src/DLXEmu/external/Phi/libs/PhiCore/src/core/assert.cpp:30:9
    #7 0x5b2082 in ImGui::AddDrawListToDrawDataEx(ImDrawData*, ImVector<ImDrawList*>*, ImDrawList*) /src/DLXEmu/external/imgui/imgui_draw.cpp:1900:9
    #8 0x597d8f in AddWindowToDrawData(ImGuiWindow*, int) /src/DLXEmu/external/imgui/imgui.cpp:5088:5
    #9 0x597e1f in AddWindowToDrawData(ImGuiWindow*, int) /src/DLXEmu/external/imgui/imgui.cpp:5091:13
    #10 0x566c4f in AddRootWindowToDrawData(ImGuiWindow*) /src/DLXEmu/external/imgui/imgui.cpp:5102:5
    #11 0x566c4f in ImGui::Render() /src/DLXEmu/external/imgui/imgui.cpp:5435:13
    #12 0x4c4e59 in EndImGui() /src/DLXEmu/tests/Fuzzing/src/CodeEditor.fuzz.cpp:385:5
    #13 0x4c6d2e in LLVMFuzzerTestOneInput /src/DLXEmu/tests/Fuzzing/src/CodeEditor.fuzz.cpp:794:17
    #14 0x4272f3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #15 0x4300e4 in fuzzer::Fuzzer::CrashResistantMergeInternalStep(std::__Fuzzer::basic_string<char, std::__Fuzzer::char_traits<char>, std::__Fuzzer::allocator<char> > const&, bool) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMerge.cpp:235:5
    #16 0x418189 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:885:8
    #17 0x441832 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #18 0x7f0016016082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)
    #19 0x408c1d in _start (build-out/fuzz_code_editor+0x408c1d)

DEDUP_TOKEN: __sanitizer_print_stack_trace--fuzzer::PrintStackTrace()--fuzzer::Fuzzer::CrashCallback()
NOTE: libFuzzer has rudimentary signal handlers.
      Combine libFuzzer with AddressSanitizer or similar for better crash reports.
SUMMARY: libFuzzer: deadly signal
MS: 0 ; base unit: 0000000000000000000000000000000000000000
artifact_prefix='./'; Test unit written to ./crash-10b494dc37f7acaeb1af5f547ff2f757da0ababa
MERGE-OUTER: attempt 6
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 4160499270
INFO: Loaded 1 modules   (521 inline 8-bit counters): 521 [0x888560, 0x888769), 
INFO: Loaded 1 PC tables (521 PCs): 521 [0x783c90,0x785d20), 
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 1048576 bytes
MERGE-INNER: using the control file '/tmp/libFuzzerTemp.Merge598.txt'
MERGE-INNER: '/github/workspace/cifuzz-corpus/fuzz_code_editor/10b494dc37f7acaeb1af5f547ff2f757da0ababa' caused a failure at the previous merge step
MERGE-INNER: 13324 total files; 9761 processed earlier; will process 3563 files now
#1	pulse  cov: 79 ft: 80 exec/s: 1 rss: 233Mb
#2	pulse  cov: 94 ft: 138 exec/s: 2 rss: 233Mb
#4	pulse  cov: 126 ft: 236 exec/s: 4 rss: 233Mb
#8	pulse  cov: 154 ft: 365 exec/s: 8 rss: 233Mb
#16	pulse  cov: 161 ft: 446 exec/s: 16 rss: 233Mb
#32	pulse  cov: 173 ft: 559 exec/s: 32 rss: 233Mb
#64	pulse  cov: 224 ft: 765 exec/s: 64 rss: 233Mb
#128	pulse  cov: 244 ft: 920 exec/s: 128 rss: 233Mb
#256	pulse  cov: 257 ft: 1085 exec/s: 256 rss: 233Mb
#512	pulse  cov: 262 ft: 1168 exec/s: 256 rss: 233Mb
#1024	pulse  cov: 267 ft: 1280 exec/s: 512 rss: 233Mb
#2048	pulse  cov: 281 ft: 1434 exec/s: 512 rss: 233Mb
#3563	DONE   cov: 288 ft: 1544 exec/s: 712 rss: 233Mb
MERGE-OUTER: successful in 6 attempt(s)
MERGE-OUTER: the control file has 1685800 bytes
MERGE-OUTER: consumed 1Mb (32Mb rss) to parse the control file
MERGE-OUTER: 817 new files with 1736 new features added; 333 new coverage edges
